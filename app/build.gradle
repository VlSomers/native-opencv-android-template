apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

android {
    compileSdk 34
    ndkVersion "27.0.12077973"  // Adding NDK version as recommended

    defaultConfig {
        applicationId "com.example.nativeopencvandroidtemplate"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions -fPIC"
                abiFilters 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a'
                arguments "-DOpenCV_DIR=" + opencvsdk + "/sdk/native/jni",
                          "-DANDROID_LD_FLAGS=-Wl,-z,max-page-size=16384"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Ensure debug builds also have 16 KB compatibility
        }
    }

    // Add packaging options for 16 KB page size compatibility
    packagingOptions {
        jniLibs {
            useLegacyPackaging = false
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.18.1"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    namespace 'com.example.nativeopencvandroidtemplate'

    sourceSets {
        main {
            jniLibs.srcDirs += ["src/main/jniLibs"]
        }
    }
}

// Copy OpenCV native libs into conventional jniLibs folder before build
tasks.register("copyOpenCvJniLibs", Copy) {
    def srcDir = rootProject.file("OpenCV-android-sdk/sdk/native/libs")
    def destDir = project.file("src/main/jniLibs")
    from(srcDir)
    into(destDir)
    include("**/*.so")
}

preBuild.dependsOn("copyOpenCvJniLibs")

// Verify OpenCV native shared libraries exist before assembling
tasks.register("verifyOpenCvLibs") {
    doLast {
        def abiDirs = ["arm64-v8a","armeabi-v7a","x86","x86_64"]
        def missing = []
        abiDirs.each { abi ->
            def f = rootProject.file("OpenCV-android-sdk/sdk/native/libs/${abi}/libopencv_java4.so")
            if (!f.exists()) {
                missing << f.path
            }
        }
        if (!missing.isEmpty()) {
            throw new GradleException("Missing OpenCV native libs (libopencv_java4.so). Not found at:\n" + missing.join('\n') + "\nPlease restore the official OpenCV Android SDK (unzipped) at OpenCV-android-sdk/ so that sdk/native/libs/<abi>/libopencv_java4.so exists.")
        } else {
            println "Verified OpenCV native libs present for all ABIs"
        }
    }
}

preBuild.dependsOn("verifyOpenCvLibs")

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // OpenCV dependency
    implementation project(':opencv')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
